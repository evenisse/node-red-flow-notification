[
    {
        "id": "8179ff16.fe6d2",
        "type": "subflow",
        "name": "Notification",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 480,
                "wires": [
                    {
                        "id": "a48863c3.1c9b9"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#4A88C0",
        "icon": "font-awesome/fa-comment",
        "status": {
            "x": 1740,
            "y": 100,
            "wires": [
                {
                    "id": "4750c041.184c1",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "2fabe3e2.e4bbbc",
        "type": "group",
        "z": "8179ff16.fe6d2",
        "name": "E-Mail",
        "style": {
            "stroke": "#000000",
            "fill": "#ffcf3f",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "808d21ad.ab263",
            "ee2966a2.0cd008",
            "13f020fb.94b10f",
            "ea223d0.8085ec"
        ],
        "x": 874,
        "y": 459,
        "w": 1032,
        "h": 82
    },
    {
        "id": "4a539a1d.da4414",
        "type": "group",
        "z": "8179ff16.fe6d2",
        "name": "Mattermost",
        "style": {
            "stroke": "#000000",
            "fill": "#c8e7a7",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ab286742.557138",
            "9e403c64.25c2e",
            "c5b3e7e1.f198b8",
            "bcfc7fce.62168",
            "d532ed59.2561",
            "4bcab187.70891",
            "20e42500.17618c",
            "4b6210fe.728e3",
            "87d41b51.f63548",
            "5cec31c6.37caa"
        ],
        "x": 874,
        "y": 739,
        "w": 1532,
        "h": 162
    },
    {
        "id": "62281a86.c0d874",
        "type": "group",
        "z": "8179ff16.fe6d2",
        "name": "Discord",
        "style": {
            "stroke": "#000000",
            "fill": "#b797cf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "3cdd2aaa.ea3ca6",
            "88d91c3.bbb7fe",
            "c832adf8.fbe6c",
            "f9e83272.b4f41",
            "df9935dc.a7cbc8",
            "9c264420.78c5f8",
            "14b2980b.09f898",
            "1558d6fd.d79359",
            "16992692.310609",
            "39f22ec8.d87a82"
        ],
        "x": 874,
        "y": 559,
        "w": 1512,
        "h": 162
    },
    {
        "id": "6b6a1060.04ad9",
        "type": "group",
        "z": "8179ff16.fe6d2",
        "name": "HTML5",
        "style": {
            "stroke": "#000000",
            "fill": "#3f93cf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ff9f84ea.3c4778",
            "bca57a2c.ee2f28",
            "6e186f08.cdb87",
            "4750c041.184c1"
        ],
        "x": 874,
        "y": 59,
        "w": 812,
        "h": 82
    },
    {
        "id": "6b79da0f.cfd534",
        "type": "group",
        "z": "8179ff16.fe6d2",
        "name": "sms",
        "style": {
            "stroke": "#000000",
            "fill": "#6f2fa0",
            "label": true,
            "color": "#ffffff"
        },
        "nodes": [
            "582f9906.d78c98",
            "f9d7f1fa.2edea",
            "c7788ccd.39f15"
        ],
        "x": 874,
        "y": 1309,
        "w": 552,
        "h": 82
    },
    {
        "id": "a067e40f.4f58b8",
        "type": "group",
        "z": "8179ff16.fe6d2",
        "name": "Awtrix",
        "style": {
            "label": true,
            "stroke": "#000000",
            "fill": "#ff7f7f",
            "color": "#000000"
        },
        "nodes": [
            "c4e708f8.346568",
            "e77911c7.63ab2",
            "e32f3746.a8c108"
        ],
        "x": 874,
        "y": 1419,
        "w": 552,
        "h": 82
    },
    {
        "id": "b5d86574.026cf8",
        "type": "group",
        "z": "8179ff16.fe6d2",
        "name": "TTS",
        "style": {
            "stroke": "#000000",
            "fill": "#7fb7df",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "468aba2d.671d74",
            "8d9e5ca5.dbf9b",
            "8546989d.1ef0d8",
            "fdabd9ea.e88758",
            "9a6b8bc5.738268",
            "b54985a5.5e7f08",
            "4822ccce.b98754",
            "e8e4ec2b.36d2d",
            "c578cccb.b8001",
            "c2380fdf.863b7",
            "f83665fe.f51488",
            "a6e0613a.354be",
            "477fc04d.86f0d",
            "4850950c.458efc",
            "a255675b.5215c8",
            "66135813.68b718",
            "48a0d49.367192c"
        ],
        "x": 874,
        "y": 179,
        "w": 2572,
        "h": 122
    },
    {
        "id": "d93c2ea9.bc956",
        "type": "group",
        "z": "8179ff16.fe6d2",
        "name": "Telegram",
        "style": {
            "stroke": "#000000",
            "fill": "#7f8faf",
            "label": true,
            "color": "#ffffff"
        },
        "nodes": [
            "53c306ec.106188",
            "c722b697.2a6478",
            "9ea07214.e46fe",
            "73774be.64023b4",
            "eb6a68e6.0eda98",
            "f47a0a30.5a46e8",
            "62a976fc.0f8db8",
            "96630c01.ca146",
            "28836fb9.6a5a9",
            "1b7f57f.addb7a8",
            "8d9b8149.d082a"
        ],
        "x": 874,
        "y": 919,
        "w": 872,
        "h": 362
    },
    {
        "id": "dfedf3ef.4ce0b",
        "type": "group",
        "z": "8179ff16.fe6d2",
        "name": "Home Assistant",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "2965b4d5.95718c",
            "6841b7fb.9a2618",
            "3e5964ff.bc354c",
            "16c659b.40ab7a6",
            "ae35031f.3ee2f"
        ],
        "x": 874,
        "y": 339,
        "w": 1032,
        "h": 82
    },
    {
        "id": "556fc1d1.ff7d1",
        "type": "switch",
        "z": "8179ff16.fe6d2",
        "name": "Redirect to dest",
        "property": "dest",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "html5",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "tts_",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "tel_",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "mail_",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "discord_",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "mattermost_",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "telegram_",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "sms_",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "awtrix_",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 720,
        "y": 580,
        "wires": [
            [
                "bca57a2c.ee2f28"
            ],
            [
                "4822ccce.b98754"
            ],
            [
                "6841b7fb.9a2618"
            ],
            [
                "ee2966a2.0cd008"
            ],
            [
                "88d91c3.bbb7fe"
            ],
            [
                "9e403c64.25c2e"
            ],
            [
                "53c306ec.106188"
            ],
            [
                "c7788ccd.39f15"
            ],
            [
                "e32f3746.a8c108"
            ]
        ],
        "outputLabels": [
            "",
            "",
            "mobile_clement",
            "email",
            "discord",
            "",
            "",
            "",
            ""
        ]
    },
    {
        "id": "ff9f84ea.3c4778",
        "type": "api-call-service",
        "z": "8179ff16.fe6d2",
        "g": "6b6a1060.04ad9",
        "name": "html5",
        "version": 1,
        "debugenabled": false,
        "service_domain": "notify",
        "service": "html5",
        "entityId": "",
        "data": "{\"message\":\"{{message}}\"}",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 1410,
        "y": 100,
        "wires": [
            [
                "4750c041.184c1"
            ]
        ]
    },
    {
        "id": "bca57a2c.ee2f28",
        "type": "function",
        "z": "8179ff16.fe6d2",
        "g": "6b6a1060.04ad9",
        "name": "Check Short Message",
        "func": "if (msg.short_message !== 'undefined' ) {\n    msg.short_message = msg.message;\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1000,
        "y": 100,
        "wires": [
            [
                "6e186f08.cdb87"
            ]
        ]
    },
    {
        "id": "2965b4d5.95718c",
        "type": "function",
        "z": "8179ff16.fe6d2",
        "g": "dfedf3ef.4ce0b",
        "name": "Get Configuration",
        "func": "dest = msg.dest ;\nconfig = global.get(\"notif.home_assistant.dest.\"+dest) || 'undefined'\nmsg.entity_id = config;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1330,
        "y": 380,
        "wires": [
            [
                "3e5964ff.bc354c"
            ]
        ]
    },
    {
        "id": "6841b7fb.9a2618",
        "type": "function",
        "z": "8179ff16.fe6d2",
        "g": "dfedf3ef.4ce0b",
        "name": "Check Short Message",
        "func": "if (msg.short_message !== 'undefined' ) {\n    msg.short_message = msg.message;\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1000,
        "y": 380,
        "wires": [
            [
                "16c659b.40ab7a6"
            ]
        ]
    },
    {
        "id": "3e5964ff.bc354c",
        "type": "api-call-service",
        "z": "8179ff16.fe6d2",
        "g": "dfedf3ef.4ce0b",
        "name": "Home Assistant ",
        "version": 1,
        "debugenabled": false,
        "service_domain": "notify",
        "service": "{{ entity_id }}",
        "entityId": "",
        "data": "{\"message\":\"{{message}}\"}",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 1520,
        "y": 380,
        "wires": [
            [
                "ae35031f.3ee2f"
            ]
        ]
    },
    {
        "id": "808d21ad.ab263",
        "type": "function",
        "z": "8179ff16.fe6d2",
        "g": "2fabe3e2.e4bbbc",
        "name": "Get Configuration",
        "func": "dest = msg.dest ;\nconfig = global.get(\"notif.email.dest.\"+dest) || 'undefined'\nmsg.to = config;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1290,
        "y": 500,
        "wires": [
            [
                "13f020fb.94b10f",
                "ea223d0.8085ec"
            ]
        ]
    },
    {
        "id": "ee2966a2.0cd008",
        "type": "change",
        "z": "8179ff16.fe6d2",
        "g": "2fabe3e2.e4bbbc",
        "name": "Message2Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 500,
        "wires": [
            [
                "808d21ad.ab263"
            ]
        ]
    },
    {
        "id": "13f020fb.94b10f",
        "type": "e-mail",
        "z": "8179ff16.fe6d2",
        "g": "2fabe3e2.e4bbbc",
        "server": "172.17.0.1",
        "port": "25",
        "secure": false,
        "tls": false,
        "name": "",
        "dname": "",
        "x": 1550,
        "y": 500,
        "wires": []
    },
    {
        "id": "de4cbc47.4cbd2",
        "type": "comment",
        "z": "8179ff16.fe6d2",
        "name": "========== DOCUMENTATION EN ==========",
        "info": "# Information\n\nThis flow aims to centralize all notifications.\n\nActualy, it's work with :\n- HTML5 (by Home Assistant)\n- Discord\n- Telegram\n- Email\n- TTS\n- Home Assistant (Mobile App)\n- SMS by JPI\n- Awtrix\n\n# Requirement\n\n- node-red-contrib-chatbot\n- node-red-contrib-chatbot-discord\n- node-red-contrib-string\n- node-red-contrib-home-assistant-websocket\n- node-red-node-email\n\n\n# Input\n\nIn this exemple, you can find all inut :\n\n```\nmsg.title = \"Home Assistant - New version available\"\nmsg.dest = \"tel_clement;mail_clement;tts_80_hall\"  \nmsg.message = \"Home Assistant : New version available => 0.113.0 \\n\nhttps://github.com/home-assistant/core/releases/tag/0.113.0\"\nmsg.short_message = \"Home Assistant : New version available (0.113.0)\"\nmsg.image = \"/data/image.jpeg\"\nmsg.document = \"/data/doc.js\"\nmsg.video = \"/data/video.mp4\"\n```\n> All inputs are not necessarily compatible with all services\n\n\n## Title / `msg.title`\n\n_Available on : Email_\n\nTitle use only for email\n\n_Exemple:_\n\n```\nmsg.title = \"Home Assistant - New version available\"\n```\n\n## Message / `msg.message`\n\n_Available on : Email / Telegram / Discord_\n\nLong version of message\n\n_Exemple:_\n\n```\nmsg.message = \"Home Assistant : New version available => 0.113.0 \\n https://github.com/home-assistant/core/releases/tag/0.113.0\"\n```\n\n## Short Message / `msg.short_message`\n_Available on : HTML5 / Home Assistant_\n\nShort Message use in \"popup'\n\n_Exemple:_\n```\nmsg.short_message = \"Home Assistant : New version available (0.113.0)\"\n```\n\n**WARNING : Message are Trim & `\\n` replace by space**\n> => If not set, i take msg.message.\n  \n## Image / `msg.image`\n_Available on : Telegram_\n\n_Exemple:_\n```\nmsg.image = \"/data/image.jpeg\"\nmsg.image = \"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__340.jpg\"\n```\n## Document / `msg.document`\n_Available on : Telegram_\n_Exemple:_\n```\nmsg.document = \"/data/doc.js\"\n```\n## Video / `msg.video`\n_Available on : Telegram_\n_Exemple:_\n```\nmsg.video = \"/data/video.mp4\"\n```\n\n## Destination / `msg.dest`\n\n_Available on : All_\n\nIs a string to contains all destination separated by \"`;`\"\n\n_Exemple:_\n\n```\nmsg.dest = \"tel_clement;mail_clement;tts_80_hall\"  \n```\n\nMessage send to :\n- tel_clement \n- mail_clement\n- tts_80_hall       \n\n### HTML5\nThis dest is always notify, you don't need to add this dest.\n\n### Discord \nDest must start by `discord_`\n\n_Exemple:_\n```\nmsg.dest = \"discord_communaute_news;discord_maison_information;discord_maison_network\"  \n```\n\n### Home Assistant \nDest must start by `tel_`\n\n_Exemple:_\n```\nmsg.dest = \"tel_clement;tel_papa;tel_maman\n```\n### Email \nDest must start by `mail_`\n\n_Exemple:_\n```\nmsg.dest = \"mail_clement;mail_thomas\"\n```\n### Telegram\nDest must start by `telegram_`\n\n_Exemple:_\n```\nmsg.dest = \"telegram_smarthome;telegram_familly\"\n```\n### TTS\nDest must start by `tts_`\n\nFormat : `tts_{VOLUME}_{ENTITY_ID_OF_MEDIA_PLAYER}`\n\n_Exemple:_\n```\nmsg.dest = \"tts_80_hall\"\n```\n\n### SMS\nDest must start by `sms_`\n\n\n_Exemple:_\n```\nmsg.dest = \"sms_clement\"\n```\n\n### Awtrix\nDest must start by `awtrix_`\n\n\n_Exemple:_\n```\nmsg.dest = \"awtrix_home\"\n```\n```\n\n# Configuration\nSubflow get configuration in global variable `notif.`\n> TTS no need configuration\n\n_Exemple:_\n\n```\nvar configuration = \n{\n    \"discord\": {\n        \"dest\": {\n            \"discord_communaute_news\": \"https://discord.com/api/webhooks/XXXXXXXXXXXXXXXX\",\n            \"discord_communaute_zwave\": \"https://discord.com/api/webhooks/YYYYYYYYYYYYYYYY\",\n            \"discord_communaute_diy\": \"https://discord.com/api/webhooks/ZZZZZZZZZZZZZZZZZ\",\n        }\n    },\n    \"home_assistant\": {\n        \"dest\": {\n            \"tel_clement\": \"mobile_app_oneplus_a6010\",\n            \"tel_nathalie\": \"mobile_app_oneplus_a5000\"\n        }\n    },\n    \"email\": {\n        \"dest\": {\n            \"mail_clement\": \"email1@domain.fr\",\n            \"mail_john\": \"email2@domain.fr\",\n            \"mail_bibi\": \"email3@domain.fr\"        \n        }\n    },\n    \"telegram\": {\n        \"dest\": {\n            \"telegram_smarthome\": \"ID1\",\n            \"telegram_bot\": \"ID2\"        \n        }\n    },\n    \"mattermost\": {\n        \"dest\": {\n            \"mattermost_home\" : \"https://mattermost.domain.fr/hooks/XXXXXXXXXXXXXXXXXXXXXXXXX\",\n            \"mattermost_volets\" : \"https://mattermost.domain.fr/hooks/YYYYYYYYYYYYYYYYYYYYYYYY\",\n        }\n    },\n    \"jpi\": {\n        \"address\": \"192.168.1.1:8080\",\n        \"dest\": {\n            \"sms_clement\": \"06XXXXXXXXX\",\n            \"sms_nathalie\": \"06YYYYYYYYY\",\n        }\n    },\n    \"awtrix\": {\n        \"dest\": {\n            \"awtrix_home\": \"192.168.1.1:7000\",\n            \"awtrix_desk\": \"192.168.1.2:7000\",\n        }\n    }\n}\nglobal.set(\"notif\",configuration)\n\nreturn msg;\n```\n\nYou can take this flow to help you to configure sublow :) \n\n\n```\n[{\"id\":\"bbda9cf1.ad8ba\",\"type\":\"inject\",\"z\":\"4787bdd6.9aa874\",\"name\":\"\",\"props\":[{\"p\":\"payload\"}],\"repeat\":\"\",\"crontab\":\"\",\"once\":true,\"onceDelay\":0.1,\"topic\":\"\",\"payload\":\"\",\"payloadType\":\"date\",\"x\":130,\"y\":130,\"wires\":[[\"513d2c9.069c3d4\"]]},{\"id\":\"dacca689.055138\",\"type\":\"function\",\"z\":\"4787bdd6.9aa874\",\"name\":\"Configurateur EXEMPLE\",\"func\":\"var configuration = \\n{\\n    \\\"discord\\\": {\\n        \\\"dest\\\": {\\n            \\\"discord_communaute_news\\\": \\\"https://discord.com/api/webhooks/XXXXXXXXXXXXXXXX\\\",\\n            \\\"discord_communaute_zwave\\\": \\\"https://discord.com/api/webhooks/YYYYYYYYYYYYYYYY\\\",\\n            \\\"discord_communaute_diy\\\": \\\"https://discord.com/api/webhooks/ZZZZZZZZZZZZZZZZZ\\\",\\n        }\\n    },\\n    \\\"home_assistant\\\": {\\n        \\\"dest\\\": {\\n            \\\"tel_clement\\\": \\\"mobile_app_oneplus_a6010\\\",\\n            \\\"tel_nathalie\\\": \\\"mobile_app_oneplus_a5000\\\"\\n        }\\n    },\\n    \\\"email\\\": {\\n        \\\"dest\\\": {\\n            \\\"mail_clement\\\": \\\"email1@domain.fr\\\",\\n            \\\"mail_john\\\": \\\"email2@domain.fr\\\",\\n            \\\"mail_bibi\\\": \\\"email3@domain.fr\\\"        \\n        }\\n    },\\n    \\\"telegram\\\": {\\n        \\\"dest\\\": {\\n            \\\"telegram_smarthome\\\": \\\"ID1\\\",\\n            \\\"telegram_bot\\\": \\\"ID2\\\"        \\n        }\\n    },\\n    \\\"mattermost\\\": {\\n        \\\"dest\\\": {\\n            \\\"mattermost_home\\\" : \\\"https://mattermost.domain.fr/hooks/XXXXXXXXXXXXXXXXXXXXXXXXX\\\",\\n            \\\"mattermost_volets\\\" : \\\"https://mattermost.domain.fr/hooks/YYYYYYYYYYYYYYYYYYYYYYYY\\\",\\n        }\\n    },\\n    \\\"jpi\\\": {\\n        \\\"address\\\": \\\"192.168.1.1:8080\\\",\\n        \\\"dest\\\": {\\n            \\\"sms_clement\\\": \\\"06XXXXXXXXX\\\",\\n            \\\"sms_nathalie\\\": \\\"06YYYYYYYYY\\\",\\n        }\\n    }\\n}\\nglobal.set(\\\"notif\\\",configuration)\\n\\nreturn msg;\",\"outputs\":1,\"noerr\":0,\"initialize\":\"\",\"finalize\":\"\",\"x\":540,\"y\":130,\"wires\":[[]]},{\"id\":\"513d2c9.069c3d4\",\"type\":\"change\",\"z\":\"4787bdd6.9aa874\",\"name\":\"Remove old config\",\"rules\":[{\"t\":\"delete\",\"p\":\"notif\",\"pt\":\"global\"}],\"action\":\"\",\"property\":\"\",\"from\":\"\",\"to\":\"\",\"reg\":false,\"x\":310,\"y\":130,\"wires\":[[\"dacca689.055138\"]]}]\n```\n\nExemple of input :\n\n```\n[{\"id\":\"66da3fb7.1e4ff\",\"type\":\"change\",\"z\":\"8a8a63c5.0c3c2\",\"name\":\"\",\"rules\":[{\"t\":\"set\",\"p\":\"title\",\"pt\":\"msg\",\"to\":\"Coucou\",\"tot\":\"str\"},{\"t\":\"set\",\"p\":\"message\",\"pt\":\"msg\",\"to\":\"Long Message\",\"tot\":\"str\"},{\"t\":\"set\",\"p\":\"short_message\",\"pt\":\"msg\",\"to\":\"Short Message\",\"tot\":\"str\"},{\"t\":\"set\",\"p\":\"dest\",\"pt\":\"msg\",\"to\":\"tel_clement;mail_clement\",\"tot\":\"str\"}],\"action\":\"\",\"property\":\"\",\"from\":\"\",\"to\":\"\",\"reg\":false,\"x\":740,\"y\":1880,\"wires\":[[\"7300bcc2.c97c34\"]]}]\n```",
        "x": 300,
        "y": 240,
        "wires": []
    },
    {
        "id": "9ba46cac.95898",
        "type": "split",
        "z": "8179ff16.fe6d2",
        "name": "",
        "splt": ";",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 130,
        "y": 580,
        "wires": [
            [
                "d1292fdc.3954e"
            ]
        ]
    },
    {
        "id": "a48863c3.1c9b9",
        "type": "change",
        "z": "8179ff16.fe6d2",
        "name": "Convert dest2payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dest",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 190,
        "y": 480,
        "wires": [
            [
                "9ba46cac.95898"
            ]
        ]
    },
    {
        "id": "d1292fdc.3954e",
        "type": "delay",
        "z": "8179ff16.fe6d2",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 280,
        "y": 580,
        "wires": [
            [
                "c97c0379.f16f"
            ]
        ]
    },
    {
        "id": "c97c0379.f16f",
        "type": "change",
        "z": "8179ff16.fe6d2",
        "name": "Convert payload2dest",
        "rules": [
            {
                "t": "set",
                "p": "dest",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 580,
        "wires": [
            [
                "556fc1d1.ff7d1"
            ]
        ]
    },
    {
        "id": "99a04504.512b28",
        "type": "comment",
        "z": "8179ff16.fe6d2",
        "name": "========== DOCUMENTATION FR ==========",
        "info": "# Information\n\nCe subflow va vous permettre de notifier plusieurs service en même temps.\n\nActuellement il gérée les services :\n- HTML5 (by Home Assistant)\n- Discord\n- Telegram\n- Email\n- TTS\n- Home Assistant (Mobile App)\n- SMS via JPI8\n- Awtrix\n\n# Pré-requis\n\n- node-red-contrib-chatbot\n- node-red-contrib-chatbot-discord\n- node-red-contrib-string\n- node-red-contrib-home-assistant-websocket\n- node-red-node-email\n\n\n# Entrée\n\nVoici la liste des inputs actuellement possible :\n\n```\nmsg.title = \"Home Assistant - New version available\"\nmsg.dest = \"tel_clement;mail_clement;tts_80_hall\"  \nmsg.message = \"Home Assistant : New version available => 0.113.0 \\n\nhttps://github.com/home-assistant/core/releases/tag/0.113.0\"\nmsg.short_message = \"Home Assistant : New version available (0.113.0)\"\nmsg.image = \"/data/image.jpeg\"\nmsg.document = \"/data/doc.js\"\nmsg.video = \"/data/video.mp4\"\n```\n> Tout les inputs ne sont pas forcement compatible avec les differents services.\n\n## Titre / `msg.title`\n\n_Disponible sur : Email_\n\nTitre du mail.\n\n_Exemple:_\n\n```\nmsg.title = \"Home Assistant - New version available\"\n```\n\n## Message / `msg.message`\n\n_Disponible sur : Email / Telegram / Discord_\n\nVersion longue du message.\n\n_Exemple:_\n\n```\nmsg.message = \"Home Assistant : New version available => 0.113.0 \\n https://github.com/home-assistant/core/releases/tag/0.113.0\"\n```\n\n## Message court / `msg.short_message`\n\n_Disponible sur : HTML5 / Home Assistant_\n\nMessage reduit pour les services type \"popup\".\n\n_Exemple:_\n```\nmsg.short_message = \"Home Assistant : New version available (0.113.0)\"\n```\n\n**ATTENTION : Les messages est `trim` et les `\\n` sont remplacer par des espace**\n> => Si il n'est pas défini, je reprend les `msg.message`\n\n## Image / `msg.image`\n\n_Disponible sur : Telegram_\n\n_Exemple:_\n```\nmsg.image = \"/data/image.jpeg\"\nmsg.image = \"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__340.jpg\"\n```\n## Document / `msg.document`\n\n_Disponible sur : Telegram_\n\n_Exemple:_\n```\nmsg.document = \"/data/doc.js\"\n```\n## Video / `msg.video`\n\n_Disponible sur : Telegram_\n\n_Exemple:_\n```\nmsg.video = \"/data/video.mp4\"\n```\n\n## Destinatation / `msg.dest`\nUn string qui contient la liste des services que vous désirez notifier séparer par des \"`;`\"\n\n_Exemple:_\n\n```\nmsg.dest = \"tel_clement;mail_clement;tts_80_hall\"  \n```\n\nLe message sera envoyé à :\n- tel_clement \n- mail_clement\n- tts_80_hall       \n\n### HTML5\nLa totalité des messages passe par ce système par défaut, pas besoin de l'ajouter en destination.\n\n### Discord \ndest doit commencer par `discord_`\n\n_Exemple:_\n```\nmsg.dest = \"discord_communaute_news;discord_maison_information;discord_maison_network\"  \n```\n\n### Home Assistant \ndest doit commencer par `tel_`\n\n_Exemple:_\n```\nmsg.dest = \"tel_clement;tel_papa;tel_maman\n```\n### Email \ndest doit commencer par `mail_`\n\n_Exemple:_\n```\nmsg.dest = \"mail_clement;mail_thomas\"\n```\n### Telegram\ndest doit commencer par `telegram_`\n\n_Exemple:_\n```\nmsg.dest = \"telegram_smarthome;telegram_familly\"\n```\n### TTS\ndest doit commencer par `tts_`\n\nFormat : `tts_{VOLUME}_{ENTITY_ID_DU_MEDIA_PLAYER}`\n\n_Exemple:_\n```\nmsg.dest = \"tts_80_hall\"\n```\n### SMS\ndest doit commencer par `sms_`\n\n_Exemple:_\n```\nmsg.dest = \"sms_clement\"\n```\n### Awtrix\ndest doit commencer par `awtrix_`\n\n_Exemple:_\n```\nmsg.dest = \"awtrix_home\"\n```\n```\n\n# Configuration\n\nLe subflow récupére sa configuration via la variable Global `notif.`\n\n> TTS n'a besoin d'aucune configuration particulière\n\n_Exemple:_\n\n```\nvar configuration = \n{\n    \"discord\": {\n        \"dest\": {\n            \"discord_communaute_news\": \"https://discord.com/api/webhooks/XXXXXXXXXXXXXXXX\",\n            \"discord_communaute_zwave\": \"https://discord.com/api/webhooks/YYYYYYYYYYYYYYYY\",\n            \"discord_communaute_diy\": \"https://discord.com/api/webhooks/ZZZZZZZZZZZZZZZZZ\",\n        }\n    },\n    \"home_assistant\": {\n        \"dest\": {\n            \"tel_clement\": \"mobile_app_oneplus_a6010\",\n            \"tel_nathalie\": \"mobile_app_oneplus_a5000\"\n        }\n    },\n    \"email\": {\n        \"dest\": {\n            \"mail_clement\": \"email1@domain.fr\",\n            \"mail_john\": \"email2@domain.fr\",\n            \"mail_bibi\": \"email3@domain.fr\"        \n        }\n    },\n    \"telegram\": {\n        \"dest\": {\n            \"telegram_smarthome\": \"ID1\",\n            \"telegram_bot\": \"ID2\"        \n        }\n    },\n    \"mattermost\": {\n        \"dest\": {\n            \"mattermost_home\" : \"https://mattermost.domain.fr/hooks/XXXXXXXXXXXXXXXXXXXXXXXXX\",\n            \"mattermost_volets\" : \"https://mattermost.domain.fr/hooks/YYYYYYYYYYYYYYYYYYYYYYYY\",\n        }\n    },\n    \"jpi\": {\n        \"address\": \"192.168.1.1:8080\",\n        \"dest\": {\n            \"sms_clement\": \"06XXXXXXXXX\",\n            \"sms_nathalie\": \"06YYYYYYYYY\",\n        }\n    },\n    \"awtrix\": {\n        \"dest\": {\n            \"awtrix_home\": \"192.168.1.1:7000\",\n            \"awtrix_desk\": \"192.168.1.2:7000\",\n        }\n    }\n}\nglobal.set(\"notif\",configuration)\n\nreturn msg;\n```\n\nPour vous aidez dans la configuration voici une function qui va vous permettres de pousser votre configuration à chaque deploiement.\n\nTout ce passe dans le node `Function`.\n\n\n```\n[{\"id\":\"bbda9cf1.ad8ba\",\"type\":\"inject\",\"z\":\"4787bdd6.9aa874\",\"name\":\"\",\"props\":[{\"p\":\"payload\"}],\"repeat\":\"\",\"crontab\":\"\",\"once\":true,\"onceDelay\":0.1,\"topic\":\"\",\"payload\":\"\",\"payloadType\":\"date\",\"x\":130,\"y\":130,\"wires\":[[\"513d2c9.069c3d4\"]]},{\"id\":\"dacca689.055138\",\"type\":\"function\",\"z\":\"4787bdd6.9aa874\",\"name\":\"Configurateur EXEMPLE\",\"func\":\"var configuration = \\n{\\n    \\\"discord\\\": {\\n        \\\"dest\\\": {\\n            \\\"discord_communaute_news\\\": \\\"https://discord.com/api/webhooks/XXXXXXXXXXXXXXXX\\\",\\n            \\\"discord_communaute_zwave\\\": \\\"https://discord.com/api/webhooks/YYYYYYYYYYYYYYYY\\\",\\n            \\\"discord_communaute_diy\\\": \\\"https://discord.com/api/webhooks/ZZZZZZZZZZZZZZZZZ\\\",\\n        }\\n    },\\n    \\\"home_assistant\\\": {\\n        \\\"dest\\\": {\\n            \\\"tel_clement\\\": \\\"mobile_app_oneplus_a6010\\\",\\n            \\\"tel_nathalie\\\": \\\"mobile_app_oneplus_a5000\\\"\\n        }\\n    },\\n    \\\"email\\\": {\\n        \\\"dest\\\": {\\n            \\\"mail_clement\\\": \\\"email1@domain.fr\\\",\\n            \\\"mail_john\\\": \\\"email2@domain.fr\\\",\\n            \\\"mail_bibi\\\": \\\"email3@domain.fr\\\"        \\n        }\\n    },\\n    \\\"telegram\\\": {\\n        \\\"dest\\\": {\\n            \\\"telegram_smarthome\\\": \\\"ID1\\\",\\n            \\\"telegram_bot\\\": \\\"ID2\\\"        \\n        }\\n    },\\n    \\\"mattermost\\\": {\\n        \\\"dest\\\": {\\n            \\\"mattermost_home\\\" : \\\"https://mattermost.domain.fr/hooks/XXXXXXXXXXXXXXXXXXXXXXXXX\\\",\\n            \\\"mattermost_volets\\\" : \\\"https://mattermost.domain.fr/hooks/YYYYYYYYYYYYYYYYYYYYYYYY\\\",\\n        }\\n    },\\n    \\\"jpi\\\": {\\n        \\\"address\\\": \\\"192.168.1.1:8080\\\",\\n        \\\"dest\\\": {\\n            \\\"sms_clement\\\": \\\"06XXXXXXXXX\\\",\\n            \\\"sms_nathalie\\\": \\\"06YYYYYYYYY\\\",\\n        }\\n    }\\n}\\nglobal.set(\\\"notif\\\",configuration)\\n\\nreturn msg;\",\"outputs\":1,\"noerr\":0,\"initialize\":\"\",\"finalize\":\"\",\"x\":540,\"y\":130,\"wires\":[[]]},{\"id\":\"513d2c9.069c3d4\",\"type\":\"change\",\"z\":\"4787bdd6.9aa874\",\"name\":\"Remove old config\",\"rules\":[{\"t\":\"delete\",\"p\":\"notif\",\"pt\":\"global\"}],\"action\":\"\",\"property\":\"\",\"from\":\"\",\"to\":\"\",\"reg\":false,\"x\":310,\"y\":130,\"wires\":[[\"dacca689.055138\"]]}]\n```\n\nEt voici un exemple de flow d'input :\n\n```\n[{\"id\":\"66da3fb7.1e4ff\",\"type\":\"change\",\"z\":\"8a8a63c5.0c3c2\",\"name\":\"\",\"rules\":[{\"t\":\"set\",\"p\":\"title\",\"pt\":\"msg\",\"to\":\"Coucou\",\"tot\":\"str\"},{\"t\":\"set\",\"p\":\"message\",\"pt\":\"msg\",\"to\":\"Long Message\",\"tot\":\"str\"},{\"t\":\"set\",\"p\":\"short_message\",\"pt\":\"msg\",\"to\":\"Short Message\",\"tot\":\"str\"},{\"t\":\"set\",\"p\":\"dest\",\"pt\":\"msg\",\"to\":\"tel_clement;mail_clement\",\"tot\":\"str\"}],\"action\":\"\",\"property\":\"\",\"from\":\"\",\"to\":\"\",\"reg\":false,\"x\":740,\"y\":1880,\"wires\":[[\"7300bcc2.c97c34\"]]}]\n```",
        "x": 300,
        "y": 300,
        "wires": []
    },
    {
        "id": "468aba2d.671d74",
        "type": "api-call-service",
        "z": "8179ff16.fe6d2",
        "g": "b5d86574.026cf8",
        "name": "Media Player : ON",
        "version": 1,
        "debugenabled": false,
        "service_domain": "media_player",
        "service": "turn_on",
        "entityId": "media_player.{{dest}}",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 1590,
        "y": 260,
        "wires": [
            [
                "8546989d.1ef0d8"
            ]
        ]
    },
    {
        "id": "8d9e5ca5.dbf9b",
        "type": "api-current-state",
        "z": "8179ff16.fe6d2",
        "g": "b5d86574.026cf8",
        "name": "Get Current Volume",
        "version": 1,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "override_topic": false,
        "entity_id": "media_player.{{dest}}",
        "state_type": "str",
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "blockInputOverrides": false,
        "x": 1960,
        "y": 260,
        "wires": [
            [
                "9a6b8bc5.738268"
            ]
        ]
    },
    {
        "id": "8546989d.1ef0d8",
        "type": "delay",
        "z": "8179ff16.fe6d2",
        "g": "b5d86574.026cf8",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1780,
        "y": 260,
        "wires": [
            [
                "8d9e5ca5.dbf9b"
            ]
        ]
    },
    {
        "id": "fdabd9ea.e88758",
        "type": "api-call-service",
        "z": "8179ff16.fe6d2",
        "g": "b5d86574.026cf8",
        "name": "Set volume",
        "version": 1,
        "debugenabled": true,
        "service_domain": "media_player",
        "service": "volume_set",
        "entityId": "media_player.{{dest}}",
        "data": "{\"entity_id\":\"media_player.{{ dest }}\",\"volume_level\":\"{{ volume }}\"}",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 2390,
        "y": 260,
        "wires": [
            [
                "e8e4ec2b.36d2d"
            ]
        ]
    },
    {
        "id": "9a6b8bc5.738268",
        "type": "change",
        "z": "8179ff16.fe6d2",
        "g": "b5d86574.026cf8",
        "name": "Save Current Volume",
        "rules": [
            {
                "t": "set",
                "p": "current_volume",
                "pt": "msg",
                "to": "data.attributes.volume_level",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2180,
        "y": 260,
        "wires": [
            [
                "fdabd9ea.e88758"
            ]
        ]
    },
    {
        "id": "b54985a5.5e7f08",
        "type": "api-current-state",
        "z": "8179ff16.fe6d2",
        "g": "b5d86574.026cf8",
        "name": "Get State",
        "version": 1,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "override_topic": false,
        "entity_id": "media_player.{{dest}}",
        "state_type": "str",
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "blockInputOverrides": false,
        "x": 1260,
        "y": 260,
        "wires": [
            [
                "a255675b.5215c8"
            ]
        ]
    },
    {
        "id": "4822ccce.b98754",
        "type": "function",
        "z": "8179ff16.fe6d2",
        "g": "b5d86574.026cf8",
        "name": "Split Message",
        "func": "dest = msg.dest.split('_');\nmsg.volume = dest[1]/100;\nmsg.dest = msg.dest.replace('tts_'+dest[1]+\"_\",\"\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 260,
        "wires": [
            [
                "66135813.68b718"
            ]
        ]
    },
    {
        "id": "e8e4ec2b.36d2d",
        "type": "api-call-service",
        "z": "8179ff16.fe6d2",
        "g": "b5d86574.026cf8",
        "name": "Play TTS",
        "version": 1,
        "debugenabled": false,
        "service_domain": "tts",
        "service": "google_translate_say",
        "entityId": "media_player.{{dest}}",
        "data": "{\"entity_id\":\"media_player.{{ dest }}\",\"message\":\"{{ message }}\",\"language\":\"fr\"}",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 2540,
        "y": 260,
        "wires": [
            [
                "c2380fdf.863b7"
            ]
        ]
    },
    {
        "id": "c578cccb.b8001",
        "type": "api-call-service",
        "z": "8179ff16.fe6d2",
        "g": "b5d86574.026cf8",
        "name": "Reset volume",
        "version": 1,
        "debugenabled": true,
        "service_domain": "media_player",
        "service": "volume_set",
        "entityId": "media_player.{{dest}}",
        "data": "{\"entity_id\":\"media_player.{{ dest }}\",\"volume_level\":\"{{ current_volume }}\"}",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 3020,
        "y": 260,
        "wires": [
            [
                "a6e0613a.354be"
            ]
        ]
    },
    {
        "id": "c2380fdf.863b7",
        "type": "delay",
        "z": "8179ff16.fe6d2",
        "g": "b5d86574.026cf8",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 2700,
        "y": 260,
        "wires": [
            [
                "f83665fe.f51488"
            ]
        ]
    },
    {
        "id": "f83665fe.f51488",
        "type": "api-current-state",
        "z": "8179ff16.fe6d2",
        "g": "b5d86574.026cf8",
        "name": "Get State",
        "version": 1,
        "outputs": 2,
        "halt_if": "playing",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "override_topic": false,
        "entity_id": "media_player.{{dest}}",
        "state_type": "str",
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "blockInputOverrides": false,
        "x": 2840,
        "y": 260,
        "wires": [
            [
                "477fc04d.86f0d"
            ],
            [
                "c578cccb.b8001"
            ]
        ]
    },
    {
        "id": "a6e0613a.354be",
        "type": "api-call-service",
        "z": "8179ff16.fe6d2",
        "g": "b5d86574.026cf8",
        "name": "Media Player : OFF",
        "version": 1,
        "debugenabled": false,
        "service_domain": "media_player",
        "service": "turn_off",
        "entityId": "media_player.{{dest}}",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 3210,
        "y": 260,
        "wires": [
            [
                "48a0d49.367192c"
            ]
        ]
    },
    {
        "id": "477fc04d.86f0d",
        "type": "link out",
        "z": "8179ff16.fe6d2",
        "g": "b5d86574.026cf8",
        "name": "OUT : Wait idle",
        "links": [
            "4850950c.458efc"
        ],
        "x": 3020,
        "y": 220,
        "wires": [],
        "l": true
    },
    {
        "id": "4850950c.458efc",
        "type": "link in",
        "z": "8179ff16.fe6d2",
        "g": "b5d86574.026cf8",
        "name": "IN : Wait idle",
        "links": [
            "477fc04d.86f0d"
        ],
        "x": 2530,
        "y": 220,
        "wires": [
            [
                "c2380fdf.863b7"
            ]
        ],
        "l": true
    },
    {
        "id": "a255675b.5215c8",
        "type": "switch",
        "z": "8179ff16.fe6d2",
        "g": "b5d86574.026cf8",
        "name": "Check status",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "idle",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1410,
        "y": 260,
        "wires": [
            [
                "468aba2d.671d74"
            ],
            [
                "468aba2d.671d74"
            ]
        ]
    },
    {
        "id": "6e186f08.cdb87",
        "type": "string",
        "z": "8179ff16.fe6d2",
        "g": "6b6a1060.04ad9",
        "name": "",
        "methods": [
            {
                "name": "replaceAll",
                "params": [
                    {
                        "type": "str",
                        "value": "\\n"
                    },
                    {
                        "type": "str",
                        "value": " "
                    }
                ]
            },
            {
                "name": "trim",
                "params": []
            }
        ],
        "prop": "message",
        "propout": "message",
        "object": "msg",
        "objectout": "msg",
        "x": 1210,
        "y": 100,
        "wires": [
            [
                "ff9f84ea.3c4778"
            ]
        ]
    },
    {
        "id": "16c659b.40ab7a6",
        "type": "string",
        "z": "8179ff16.fe6d2",
        "g": "dfedf3ef.4ce0b",
        "name": "",
        "methods": [
            {
                "name": "replaceAll",
                "params": [
                    {
                        "type": "str",
                        "value": "\\n"
                    },
                    {
                        "type": "str",
                        "value": " "
                    }
                ]
            },
            {
                "name": "trim",
                "params": []
            }
        ],
        "prop": "message",
        "propout": "message",
        "object": "msg",
        "objectout": "msg",
        "x": 1170,
        "y": 380,
        "wires": [
            [
                "2965b4d5.95718c"
            ]
        ]
    },
    {
        "id": "66135813.68b718",
        "type": "string",
        "z": "8179ff16.fe6d2",
        "g": "b5d86574.026cf8",
        "name": "",
        "methods": [
            {
                "name": "replaceAll",
                "params": [
                    {
                        "type": "str",
                        "value": "\\n"
                    },
                    {
                        "type": "str",
                        "value": " "
                    }
                ]
            },
            {
                "name": "trim",
                "params": []
            }
        ],
        "prop": "message",
        "propout": "message",
        "object": "msg",
        "objectout": "msg",
        "x": 1130,
        "y": 260,
        "wires": [
            [
                "b54985a5.5e7f08"
            ]
        ]
    },
    {
        "id": "4750c041.184c1",
        "type": "function",
        "z": "8179ff16.fe6d2",
        "g": "6b6a1060.04ad9",
        "name": "Log",
        "func": "node.log(\"NOTIF / HTML5 => OK\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1610,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "ae35031f.3ee2f",
        "type": "function",
        "z": "8179ff16.fe6d2",
        "g": "dfedf3ef.4ce0b",
        "name": "Log",
        "func": "node.log(\"NOTIF / Home Assistant => OK\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1830,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "ea223d0.8085ec",
        "type": "function",
        "z": "8179ff16.fe6d2",
        "g": "2fabe3e2.e4bbbc",
        "name": "Log",
        "func": "node.log(\"NOTIF / Email => OK\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1830,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "48a0d49.367192c",
        "type": "function",
        "z": "8179ff16.fe6d2",
        "g": "b5d86574.026cf8",
        "name": "Log",
        "func": "node.log(\"NOTIF / TTS => OK\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3370,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "ab286742.557138",
        "type": "function",
        "z": "8179ff16.fe6d2",
        "g": "4a539a1d.da4414",
        "name": "Log",
        "func": "node.log(\"NOTIF / Mattermost => OK\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2090,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "9e403c64.25c2e",
        "type": "function",
        "z": "8179ff16.fe6d2",
        "g": "4a539a1d.da4414",
        "name": "Get Configuration",
        "func": "dest = msg.dest ;\nconfig = global.get(\"notif.mattermost.dest.\"+dest) || 'undefined'\n\nmsg.data = {};\nmsg.webhook = config;\nmsg.data.username = \"SmartHome\";\nmsg.data.icon_url = \"https://www.contextworld.com/documents/20126/237707/Smart+Home_M.Blue+Icon.png/c92f8c28-6f99-c685-d21a-85c7cf90b515?t=1544434686070\";\nmsg.data.text = msg.message;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 820,
        "wires": [
            [
                "d532ed59.2561"
            ]
        ]
    },
    {
        "id": "c5b3e7e1.f198b8",
        "type": "http request",
        "z": "8179ff16.fe6d2",
        "g": "4a539a1d.da4414",
        "name": "Post Request",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1640,
        "y": 820,
        "wires": [
            [
                "87d41b51.f63548"
            ]
        ]
    },
    {
        "id": "bcfc7fce.62168",
        "type": "function",
        "z": "8179ff16.fe6d2",
        "g": "4a539a1d.da4414",
        "name": "Format Query",
        "func": "msg.url = msg.webhook\nmsg.method = \"POST\"\nmsg.headers = {};\nmsg.headers['Content-Type'] = 'application/json';\nmsg.payload = msg.data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1420,
        "y": 820,
        "wires": [
            [
                "c5b3e7e1.f198b8"
            ]
        ]
    },
    {
        "id": "d532ed59.2561",
        "type": "json",
        "z": "8179ff16.fe6d2",
        "g": "4a539a1d.da4414",
        "name": "Convert Data to String",
        "property": "data",
        "action": "",
        "pretty": false,
        "x": 1210,
        "y": 820,
        "wires": [
            [
                "bcfc7fce.62168"
            ]
        ]
    },
    {
        "id": "3cdd2aaa.ea3ca6",
        "type": "function",
        "z": "8179ff16.fe6d2",
        "g": "62281a86.c0d874",
        "name": "Log",
        "func": "node.log(\"NOTIF / Discord => OK\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2090,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "88d91c3.bbb7fe",
        "type": "function",
        "z": "8179ff16.fe6d2",
        "g": "62281a86.c0d874",
        "name": "Get Configuration",
        "func": "dest = msg.dest ;\nconfig = global.get(\"notif.discord.dest.\"+dest) || 'undefined'\nmsg.webhook = config;\n\n// MESSAGE\nusername = msg.username || \"undefined\";\ncontent = msg.message || \"undefined\";\navatar_url = msg.avatar_url || \"undefined\";\n\n// AUHTOR\nembeds_author_name = msg.embeds_author_name || \"undefined\";\nembeds_author_icon_url = msg.embeds_author_icon_url || \"undefined\";\nembeds_author_url = msg.embeds_author_url || \"undefined\";\n\nembeds_title = msg.embeds_title || \"undefined\";\nembeds_description = msg.embeds_description || \"undefined\";\nembeds_image = msg.embeds_image || \"undefined\";\nembeds_color = msg.embeds_color || \"undefined\";\nembeds_url = msg.embeds_url || \"undefined\";\nembeds_thumbnail = msg.embeds_thumbnail || \"undefined\";\nembeds_footer = msg.embeds_footer || \"undefined\";\n\nmsg.data = {};\nembeds_data = [];\n\nif (content != \"undefined\") {\n    msg.data.content = content;\n}    \nif (username == \"undefined\") {\n    msg.data.username = \"Node-RED\";\n}else{\n    msg.data.username = username;    \n}\nif (avatar_url == \"undefined\") {\n    msg.data.avatar_url = \"https://silanus.fr/sin/wp-content/uploads/2018/02/node-red-icon.png\";\n}else{\n    msg.data.avatar_url = avatar_url;    \n}\n\nif (embeds_url != \"undefined\" || embeds_title != \"undefined\" || embeds_description != \"undefined\" || embeds_thumbnail != \"undefined\" || embeds_image != \"undefined\" || embeds_footer != \"undefined\") {\n    message = {}\n    \n    if (embeds_author_name != \"undefined\" || embeds_author_icon_url != \"undefined\" || embeds_author_url != \"undefined\") {\n        message.author = {}\n        \n        if(embeds_author_name != \"undefined\") {\n            message.author.name = embeds_author_name;\n        }\n        if(embeds_author_url != \"undefined\") {\n            message.author.url = embeds_author_url;\n        }\n        if(embeds_author_icon_url != \"undefined\") {\n            message.author.icon_url = embeds_author_icon_url;\n        }    \n    }\n    \n    if(embeds_title != \"undefined\") {\n        message.title = msg.embeds_title;\n    }\n    if(embeds_description != \"undefined\") {\n        message.description = msg.embeds_description;\n    }\n    if(embeds_color != \"undefined\") {\n        message.color = parseInt(msg.embeds_color,16);\n    }    \n    if(embeds_url != \"undefined\") {\n        message.url = msg.embeds_url;\n    }    \n    if(embeds_thumbnail != \"undefined\") {\n        message.thumbnail = {};\n        message.thumbnail.url = msg.embeds_thumbnail;\n    }\n    if(embeds_image != \"undefined\") {\n        message.image = {};\n        message.image.url = msg.embeds_image;\n    }\n    if(embeds_footer != \"undefined\") {\n        message.footer = {};\n        message.footer.text = msg.embeds_footer;\n    }\n\n    embeds_data.push(message);\n    msg.data.embeds = embeds_data;\n}  \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 640,
        "wires": [
            [
                "df9935dc.a7cbc8"
            ]
        ]
    },
    {
        "id": "c832adf8.fbe6c",
        "type": "http request",
        "z": "8179ff16.fe6d2",
        "g": "62281a86.c0d874",
        "name": "Post Request",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1640,
        "y": 640,
        "wires": [
            [
                "16992692.310609"
            ]
        ]
    },
    {
        "id": "f9e83272.b4f41",
        "type": "function",
        "z": "8179ff16.fe6d2",
        "g": "62281a86.c0d874",
        "name": "Format Query",
        "func": "msg.url = msg.webhook\nmsg.method = \"POST\"\nmsg.headers = {};\nmsg.headers['Content-Type'] = 'application/json';\nmsg.payload = msg.data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1420,
        "y": 640,
        "wires": [
            [
                "c832adf8.fbe6c"
            ]
        ]
    },
    {
        "id": "df9935dc.a7cbc8",
        "type": "json",
        "z": "8179ff16.fe6d2",
        "g": "62281a86.c0d874",
        "name": "Convert Data to String",
        "property": "data",
        "action": "",
        "pretty": false,
        "x": 1210,
        "y": 640,
        "wires": [
            [
                "f9e83272.b4f41"
            ]
        ]
    },
    {
        "id": "53c306ec.106188",
        "type": "function",
        "z": "8179ff16.fe6d2",
        "g": "d93c2ea9.bc956",
        "name": "Get Configuration",
        "func": "dest = msg.dest ;\nconfig = global.get(\"notif.telegram.dest.\"+dest) || 'undefined'\n\nvar retour = [];\n\n// Message\nif (msg.message !== \"\") {\n    payload = {\n      chatId: config,\n      type: 'message',\n      content: msg.message\n    }\n}else{\n    payload = {\"chatId\": none};\n}\nretour.push({payload});\n\n// Image\nif (msg.image !== \"\") {\n    payload = {\n      chatId: config,\n      type: 'photo',\n      content: msg.image\n    }        \n}else{\n    payload = {\"chatId\": none};\n}\nretour.push({payload})\n\n// Video\nif (msg.video !== \"\") {\n    payload = {\n      chatId: config,\n      type: 'video',\n      content: msg.video\n    }        \n}else{\n    payload = {\"chatId\": none};\n}\nretour.push({payload})\n\n// Audio\nif (msg.audio !== \"\") {\n    payload = {\n      chatId: config,\n      type: 'audio',\n      content: msg.audio\n    }        \n}else{\n    payload = {\"chatId\": none};\n}\nretour.push({payload})\n\n// Location\nif (msg.location !== \"\") {\n    payload = {\n      chatId: config,\n      type: 'location',\n      content: msg.location\n    }        \n}else{\n    payload = {\"chatId\": none};\n}\nretour.push({payload})\n\n\n// Animation\nif (msg.animation !== \"\") {\n    payload = {\n      chatId: config,\n      type: 'animation',\n      content: msg.animation\n    }        \n}else{\n    payload = {\"chatId\": none};\n}\nretour.push({payload})\n\n\n// Voice\nif (msg.voice !== \"\") {\n    payload = {\n      chatId: config,\n      type: 'voice',\n      content: msg.voice\n    }        \n}else{\n    payload = {\"chatId\": none};\n}\nretour.push({payload})\n\n// Contact\nif (msg.contact !== \"\") {\n    payload = {\n      chatId: config,\n      type: 'contact',\n      content: msg.contact\n    }        \n}else{\n    payload = {\"chatId\": none};\n}\nretour.push({payload})\n\n\nreturn retour;",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 1100,
        "wires": [
            [
                "9ea07214.e46fe"
            ],
            [
                "73774be.64023b4"
            ],
            [
                "eb6a68e6.0eda98"
            ],
            [
                "f47a0a30.5a46e8"
            ],
            [
                "28836fb9.6a5a9"
            ],
            [
                "1b7f57f.addb7a8"
            ],
            [
                "96630c01.ca146"
            ],
            [
                "8d9b8149.d082a"
            ]
        ]
    },
    {
        "id": "c722b697.2a6478",
        "type": "function",
        "z": "8179ff16.fe6d2",
        "g": "d93c2ea9.bc956",
        "name": "Log",
        "func": "node.log(\"NOTIF / Telegram => OK\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1670,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "9ea07214.e46fe",
        "type": "switch",
        "z": "8179ff16.fe6d2",
        "g": "d93c2ea9.bc956",
        "name": "Message ?",
        "property": "payload.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1250,
        "y": 960,
        "wires": [
            [
                "62a976fc.0f8db8"
            ]
        ]
    },
    {
        "id": "73774be.64023b4",
        "type": "switch",
        "z": "8179ff16.fe6d2",
        "g": "d93c2ea9.bc956",
        "name": "Image ?",
        "property": "payload.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1240,
        "y": 1000,
        "wires": [
            [
                "62a976fc.0f8db8"
            ]
        ]
    },
    {
        "id": "eb6a68e6.0eda98",
        "type": "switch",
        "z": "8179ff16.fe6d2",
        "g": "d93c2ea9.bc956",
        "name": "Video ?",
        "property": "payload.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1240,
        "y": 1040,
        "wires": [
            [
                "62a976fc.0f8db8"
            ]
        ]
    },
    {
        "id": "f47a0a30.5a46e8",
        "type": "switch",
        "z": "8179ff16.fe6d2",
        "g": "d93c2ea9.bc956",
        "name": "Audio ?",
        "property": "payload.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1240,
        "y": 1080,
        "wires": [
            [
                "62a976fc.0f8db8"
            ]
        ]
    },
    {
        "id": "62a976fc.0f8db8",
        "type": "telegram sender",
        "z": "8179ff16.fe6d2",
        "g": "d93c2ea9.bc956",
        "name": "",
        "bot": "d5386f5c.2bc73",
        "x": 1510,
        "y": 1100,
        "wires": [
            [
                "c722b697.2a6478"
            ]
        ]
    },
    {
        "id": "96630c01.ca146",
        "type": "switch",
        "z": "8179ff16.fe6d2",
        "g": "d93c2ea9.bc956",
        "name": "Voice ?",
        "property": "payload.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1240,
        "y": 1200,
        "wires": [
            [
                "62a976fc.0f8db8"
            ]
        ]
    },
    {
        "id": "28836fb9.6a5a9",
        "type": "switch",
        "z": "8179ff16.fe6d2",
        "g": "d93c2ea9.bc956",
        "name": "Location ?",
        "property": "payload.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1250,
        "y": 1120,
        "wires": [
            [
                "62a976fc.0f8db8"
            ]
        ]
    },
    {
        "id": "1b7f57f.addb7a8",
        "type": "switch",
        "z": "8179ff16.fe6d2",
        "g": "d93c2ea9.bc956",
        "name": "Animation ?",
        "property": "payload.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1250,
        "y": 1160,
        "wires": [
            [
                "62a976fc.0f8db8"
            ]
        ]
    },
    {
        "id": "8d9b8149.d082a",
        "type": "switch",
        "z": "8179ff16.fe6d2",
        "g": "d93c2ea9.bc956",
        "name": "Contact ?",
        "property": "payload.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1240,
        "y": 1240,
        "wires": [
            [
                "62a976fc.0f8db8"
            ]
        ]
    },
    {
        "id": "9c264420.78c5f8",
        "type": "link out",
        "z": "8179ff16.fe6d2",
        "g": "62281a86.c0d874",
        "name": "Retry Discord",
        "links": [
            "14b2980b.09f898"
        ],
        "x": 2280,
        "y": 600,
        "wires": [],
        "l": true
    },
    {
        "id": "14b2980b.09f898",
        "type": "link in",
        "z": "8179ff16.fe6d2",
        "g": "62281a86.c0d874",
        "name": "Retry Discord",
        "links": [
            "9c264420.78c5f8"
        ],
        "x": 1250,
        "y": 600,
        "wires": [
            [
                "f9e83272.b4f41"
            ]
        ],
        "l": true
    },
    {
        "id": "4bcab187.70891",
        "type": "link out",
        "z": "8179ff16.fe6d2",
        "g": "4a539a1d.da4414",
        "name": "Retry Mattermost",
        "links": [
            "20e42500.17618c"
        ],
        "x": 2290,
        "y": 780,
        "wires": [],
        "l": true
    },
    {
        "id": "20e42500.17618c",
        "type": "link in",
        "z": "8179ff16.fe6d2",
        "g": "4a539a1d.da4414",
        "name": "Retry Mattermost",
        "links": [
            "4bcab187.70891"
        ],
        "x": 1230,
        "y": 780,
        "wires": [
            [
                "bcfc7fce.62168"
            ]
        ],
        "l": true
    },
    {
        "id": "1558d6fd.d79359",
        "type": "delay",
        "z": "8179ff16.fe6d2",
        "g": "62281a86.c0d874",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 2100,
        "y": 600,
        "wires": [
            [
                "9c264420.78c5f8"
            ]
        ]
    },
    {
        "id": "4b6210fe.728e3",
        "type": "delay",
        "z": "8179ff16.fe6d2",
        "g": "4a539a1d.da4414",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 2100,
        "y": 780,
        "wires": [
            [
                "4bcab187.70891"
            ]
        ]
    },
    {
        "id": "16992692.310609",
        "type": "function",
        "z": "8179ff16.fe6d2",
        "g": "62281a86.c0d874",
        "name": "",
        "func": "if (msg.statusCode < 300 && msg.statusCode >= 200) {\n    msg.success = true;\n}else{\n    msg.success = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1820,
        "y": 640,
        "wires": [
            [
                "39f22ec8.d87a82"
            ]
        ]
    },
    {
        "id": "39f22ec8.d87a82",
        "type": "switch",
        "z": "8179ff16.fe6d2",
        "g": "62281a86.c0d874",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1950,
        "y": 640,
        "wires": [
            [
                "1558d6fd.d79359"
            ],
            [
                "3cdd2aaa.ea3ca6"
            ]
        ]
    },
    {
        "id": "87d41b51.f63548",
        "type": "function",
        "z": "8179ff16.fe6d2",
        "g": "4a539a1d.da4414",
        "name": "",
        "func": "if (msg.statusCode < 300 && msg.statusCode >= 200) {\n    msg.success = true;\n}else{\n    msg.success = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1820,
        "y": 820,
        "wires": [
            [
                "5cec31c6.37caa"
            ]
        ]
    },
    {
        "id": "5cec31c6.37caa",
        "type": "switch",
        "z": "8179ff16.fe6d2",
        "g": "4a539a1d.da4414",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1950,
        "y": 820,
        "wires": [
            [
                "4b6210fe.728e3"
            ],
            [
                "ab286742.557138"
            ]
        ]
    },
    {
        "id": "582f9906.d78c98",
        "type": "http request",
        "z": "8179ff16.fe6d2",
        "g": "6b79da0f.cfd534",
        "name": "SMS via JPI",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1200,
        "y": 1350,
        "wires": [
            [
                "f9d7f1fa.2edea"
            ]
        ]
    },
    {
        "id": "f9d7f1fa.2edea",
        "type": "function",
        "z": "8179ff16.fe6d2",
        "g": "6b79da0f.cfd534",
        "name": "Log",
        "func": "node.log(\"NOTIF / SMS => OK\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1350,
        "y": 1350,
        "wires": [
            []
        ]
    },
    {
        "id": "c7788ccd.39f15",
        "type": "function",
        "z": "8179ff16.fe6d2",
        "g": "6b79da0f.cfd534",
        "name": "Get Configuration",
        "func": "var dest = msg.dest ;\nvar jpi_address = global.get('notif.jpi.address');\nvar sms_number = global.get(\"notif.jpi.dest.\"+dest) || 'undefined'\nvar message = encodeURIComponent(msg.message);\n\nmsg.method = \"POST\"\nmsg.url = \"http://\"+jpi_address+\"/?action=sendSms&number=\"+sms_number+\"&message=\"+message\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 1350,
        "wires": [
            [
                "582f9906.d78c98"
            ]
        ]
    },
    {
        "id": "c4e708f8.346568",
        "type": "http request",
        "z": "8179ff16.fe6d2",
        "g": "a067e40f.4f58b8",
        "name": "awtrix notify",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1190,
        "y": 1460,
        "wires": [
            [
                "e77911c7.63ab2"
            ]
        ]
    },
    {
        "id": "e77911c7.63ab2",
        "type": "function",
        "z": "8179ff16.fe6d2",
        "g": "a067e40f.4f58b8",
        "name": "Log",
        "func": "node.log(\"NOTIF / Awtrix => OK\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1350,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "e32f3746.a8c108",
        "type": "function",
        "z": "8179ff16.fe6d2",
        "g": "a067e40f.4f58b8",
        "name": "Get Configuration",
        "func": "var dest = msg.dest;\nvar message = msg.message;\nvar awtrix_host = global.get(\"notif.awtrix.dest.\" + dest) || 'undefined'\n\nmsg.method = \"POST\"\nmsg.url = \"http://\" + awtrix_host + \"/api/v3/notify\"\n\nmsg.payload = {\n \"name\": \"NodeRedNotification\",\n \"icon\": 225,\n \"moveIcon\": true,\n \"lifetime\": 999999,\n \"text\": message,\n \"repeat\": 2,\n \"color\": [0, 255, 0]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 1460,
        "wires": [
            [
                "c4e708f8.346568"
            ]
        ]
    },
    {
        "id": "d5386f5c.2bc73",
        "type": "telegram bot",
        "z": "8179ff16.fe6d2",
        "botname": "Node-RED",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "1000",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    }
]